变量没有类型，只有值有类型（没有类型定义，值均有直接的类型）．所有值均可存储在变量中，也可作为参数传递给其他函数

基本类型: 
  nil (空)
  boolean (布尔类型)
  number(数字,包括浮点数)
  string(字符串,不可变的字节序列．　８位清零：字符串可以包含任何８位值，包括嵌入的零＇\0')
  function(函数类型)
  userdata(任意c数据存储)
  thread(线程：标识独立的执行线程，用于实现协程.）
  table(实现关联数组)

表，函数，线程和完整的用户数据值都是对象：变量实际上不包含值，只包含对他们的引用．赋值，参数传递和函数返回总是处理对这些值的引用；这些操作并不意味着任何形式的副本．

库函数　type 返回一个描述给定值类型的字符串


使用load或loadfile加载具有不同环境的块


错误处理：
　　　调用error函数可以明确的产生一个错误．如果在Lua中发现错误,则可以使用pcall或者xpcall在保护模式下调用给定的函数(xpcall lua_pcall)


Lua中每个值都可以有一个metatable(普通的lua表)：定义了特定操作下原始值的行为．可以通过在其metatable中设置特定字段来更改操作行为的某些方面.
      matetable中每个事件的关键字是一个事件名称前面加上两个下划线的字符串；相应的称为：metamethods

　　　可以使用getmetatable函数查询任何值的metatable.可以使用setmetatable函数替换表格中的元素（不能从lua代码中改表其他的metatable类型，应该使用c api）
　　　表和完整的userdata具有独立的metatable（尽管多个表和userdata可以共享它们的metatables), 所有其他类型的值每种类型共享一个单一的metatable;
      metatable控制对象在算术运算，按位运算，顺序比较，链接，长度操作，调用和索引中的表现．metatable也可以定义一个函数，当用户数据或表被垃圾收集时被调用


GC:通过运行垃圾回收器自动管理内存手机所有死对象

　实现了一个增量式标记和扫描收集器（使用两个数字来控制其垃圾手机周期）

GC-Metamethods:允许垃圾回收与外部管理进行协调

弱表：（不太懂）

协程：lua支持协程，已称为协作多线程．　通过显式调用yield函数来暂停执行
	调用：coroutine.create 创建协程（唯一参数为一个函数，作为协程的主要功能）只创建一个协程并返回一个句柄（线程类型的对象，不启动该协程）
　　执行：coroutine.resume

	两种方式终结协程执行



Language:Lua是一种区分大小写的语言

保留关键字：
	and       break     do        else      elseif    end
	false     for       function  goto      if        in
	local     nil       not       or        repeat    return
	then      true      until     while

文字字符串也可以使用由长括号括起来的长格式来定义。我们定义了一个开放的n级开放长方括号作为开放方括号，其后是n等号，然后是另一个开放方括号。因此，0级[[开放长括号写为[=[，1级开放长括号写为，等等。甲长括号被类似地定义; 例如，第4级的一个结束长括号写为]====]。一个长的文字从任何级别的开放式长支架开始，到同级别的第一个长支架结束。它可以包含除了相同级别的右括号之外的任何文本。括号内的文字可以运行多行，不解释任何转义序列，并忽略任何其他级别的长括号。任何类型的行尾顺序（回车符，换行符，回车符后跟换行符，或换行符后接回车符）都会转换为简单的换行符
	a = 'alo\n123"'
	a = "alo\n123\""
	a = '\97lo\10\04923"'
	a = [[alo
	123"]]
	a = [==[
	alo
	123"]==]

一个数字常量（或数字）可以用一个可选的小数部分和一个可选的小数指数来编写，用一个字母' e'或' E' 标记。Lua也接受以0x或开头的十六进制常量0X。十六进制常量还接受可选的小数部分加上可选的二进制指数，用字母p“或” 标记P。带小数点或指数的数字常量表示浮点数; 否则，如果它的值适合整数，它表示一个整数。有效的整数常量的例子是
	3   345   0xff   0xBEBADA
	3.0     3.1416     314.16e-2     0.31416E1     34e1
	0x0.1E  0xA23p-4   0X1.921FB54442D18P+1

一个注释开始用双连字符（--）的字符串以外的任何地方。如果紧接着的文本--不是开头的长括号，则注释是一个简短的注释，直到行尾。否则，这是一个很长的评论，一直运行到相应的结束长支架。经常使用长注释来临时禁用代码。


变量是存储值的地方。Lua中有三种变量：全局变量，局部变量和表格字段。
一个名称可以表示一个全局变量或一个局部变量（或一个函数的形式参数，它是一种特殊的局部变量）：
除非明确声明为局部变量，否则假定任何变量名都是全局变量（见§3.3.7）。局部变量在词汇范围内：局部变量可以通过其范围内定义的函数自由访问（请参阅第3.5节）。
在第一次赋值给变量之前，其值为空。
