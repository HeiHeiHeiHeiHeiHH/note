push网关
  每个App用户都会有一个uid  如我的：119888552

  每个App用户登录App时会请求：push.gateway.jumeicd.com/mq-login  退出登录会请求push.gateway.jumeicd.com/mq-logout

    mq-login: 数据采用request header提交  message字段，其中存放了提交数据信息（json数据格式) 
          数据字段: uid(用户uid),model,brand,type,platform(andrio or iphone),sdk_vendor,sdk_reg_id,app_version,source,device_id(物理设备标识 ios 为idfa),key 这里写入日志 mq_post_login
          校验参数后组成pust数据:uid, model,brand,platform,app_version,source,user,device_id,sdk_vendor,sdk_reg_id    sdk_vendor 与 sdk_reg_id 可以为多个 逗号分隔 ios平台一般为两个 安卓一个
          然后请求 Gateway->login()方法





   用户登录App请求 mq-login 验证后 请求gateway-login 请求写redis （jobname:loginDevice, params:array(params), time:time()) JobDispatcher分发任务 运行AsyncJobHandler->loginDevice; 这里会将redis中存在该用户的tag全部删除一次，再打入tag.
   用户退出登录 mq-logout验证后 请求gateway-logout  （jobname:logoutDevice, params:array(params),time:time()) AsyncJobHandler->logoutDevice  会删除改设备上的tag

   对于message的推送： 给用户打tag(tagUsers)、删除用户tag(untagUsers)、向用户推送消息(sendMessageToUsers)、向某个tag中的用户推送消息(sendMsgByTag) 

   tagUsers: 接口获取数据 gateway->tagUsers() params :  appid, tags, uids,user  根据tag_user获取uniqId  写入日志post_tag_user
             多个Uid以逗号分隔，多个tag以#SP#分隔  1 校验uid是否为存数字 2 tag数量是否超过限制（默认50） 获取当前uid的tag数目 \User\Storage::instance()->getTagsCount($uid);
             3 校验tag是否可推送 规则：以A-Za-z_0-9开头的不可以 4 分别对每个uid都打上tags 打入失败的和成功的分别写日志(batch_tags_failed、batch_tags_succeeded) 写redis的过程 5 队列job任务写redis

             异步处理： AsyncJobHandler->tagUsers()) 获取参数 uids tag uniq_id 1 该uid是否hasTag 上4写入的 2  根据规则选择某个第三方提供商服务推送 并添加tag

  untagUsers:接口获取数据 gateway->untagUsers() params: appid, tags, uids, users, 根据untag_user获取uniqId  写入日志post_untag_user
              1 验证uid 是否为数字 2 验证tag 规则:^A-Za-z_0-9 不可以 3 每个uid 都会写入去除标签的redis string类型 4 将队列写入redis

  	     异步处理： AsyncJobHandler->untagUsers() 同上

  sendMsgToUsers: api: gateway->sendMsgsToUsers() params: msgs,types,plateform,appid,uids,title,description,url,page,time_to_live,user,task_id,extra, send_msg_to_users_xxx(uniqId), TASK_UNIQID,
		  is_stats,uids_totalattachment.  1 首先判断url是否为空 2 $uids = $appid == '' ? $uids : $appid-$uids  写入日志post_push 3 判断当前时间是否可以推送(默认24小时) 4 发送的平台是否支持		      $platform in (ios, android, all) ? 5 校验uid 6 是否可以向该设备类型推送(默认phone,pad,pod) 7 多条msg以#SP#分隔 校验是否存在有空 8 title不能为空 9 描述description不能为空 
		  10 如msg count为1 则每个uid都推送相同的内容 若不唯一是否与uids数量相同（个性化) 11 校验uid是否需要限速 12 写入AsyncJob->redis: $user,$msgs,$deviceTypes,$platform,$title,$descript		      ion,$url,$page,$ttl,$uids,$uniqId,$appid,$extra,$extended;   $extended = array($is_stats,$uids_total,$user,$attachment,$appid);

	     异步处理：AsyncJobHandler->sendMsgToUsers;  日志：push_to_user_temp

 	 	sendMsgToUsers: msg参数毫无意义的感觉 因为至需传递title与description就成。

  sendMsgByTag: api: gateway->sendMsgsByTag()  基本逻辑和上面相同.

  对于tool工具。 对于推送基本都是组装数据发送给以上接口.状态的查询大多从redis中就能获取到。与设备相关可能需要第三方服务的支持.
